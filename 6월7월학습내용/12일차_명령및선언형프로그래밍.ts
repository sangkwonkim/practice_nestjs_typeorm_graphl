// 명령형 프로그래밍 => 어떻게? how? 할 것 인지에 대한 프로그래밍으로, 로직이 어떻게 돌아가는 지에 대해서 쉽게 파악할 수 있다
// 선언형 프로그래밍 => 무엇을? what? 할 것 인지에 대한 프로그래밍으로, 로직이 어떻게 돌아가는 지 나열하는 것보단, 추상화되어 있는 것을 사용하거나 추상화 시켜
// 무엇을 달성하는 지 나열한다.
// 선언형 방식이 제대로 동작하기 위해서는 명령형으로 어떻게가 구현된 것들이 추상화 되어 있어야 함

// for문을 사용하여 배열의 각 요소에 적용될 코드를 작성하는 것은 어떻게 처리하는 지에 대해서 나열한 명령형 프로그래밍
// map, reduce을 사용할 경우에는, 이들이 어떻게 이루어져 있는지 알지 못하고, 신경 쓸 필요가 없음
// 상태를 변경하는 모든 지점들은 map, reduce 메서드 안쪽으로 추상화되어 직접 상태를 변경하지 않음 => 가독성이 높다, 재사용성이 높다

// 인터넷에서 한 글을 보고 명령형과 선언형 프로그래밍에 대해서 학습하게 되었습니다.
// 아직은 간단한 이론정도만 이해를 했지만 추가적으로 더 학습해봐야겠습니다.